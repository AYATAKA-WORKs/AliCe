/*
 * parameter.cpp
 *
 *  Created on: 2017/09/25
 *      Author: KOTA-NPC2
 */

#include "parameter.h"

//-------------------------------------------------------------------
//	ゴール座標
//-------------------------------------------------------------------
const char X_GOAL = 7;
const char Y_GOAL = 2;

//-------------------------------------------------------------------
//	方向シンボル
//-------------------------------------------------------------------
const unsigned char L = 0;
const unsigned char R = 1;
const unsigned char STRAIGHT = 2;
const unsigned char BACK = 3;

//-------------------------------------------------------------------
//	ターンパラメータ
//-------------------------------------------------------------------
// 小回り
TurnParam sturn_L_90_500 = {4800.0, 500.0, 5.5, 13.8, 30.0, 60.0, 90.0, L, 1.000};
TurnParam sturn_R_90_500 = {4800.0, 500.0, 3.5, 21.0, 35.0, 55.0, 90.0, R, 1.000};
TurnParam sturn_L_90_700 = {12000.0, 700.0, 9.0, 38.5, 44.0, 46.5, 90.5, L, 1.000};
TurnParam sturn_R_90_700 = {12000.0, 700.0, 10.0, 33.0, 44.0, 46.05, 90.5, R, 1.000};
TurnParam sturn_L_90_800 = {4200.0, 500.0, 0.1, 4.0, 30.0, 60.0, 90.0, L, 1.00};
TurnParam sturn_R_90_800 = {4200.0, 500.0, 0.1, 4.0, 30.0, 60.0, 90.0, R, 1.00};
TurnParam sturn_L_90_1000 = {4200.0, 500.0, 0.1, 4.0, 30.0, 60.0, 90.0, L, 1.00};
TurnParam sturn_R_90_1000 = {4200.0, 500.0, 0.1, 4.0, 30.0, 60.0, 90.0, R, 1.00};
TurnParam sturn_L_90_1500 = {4200.0, 500.0, 0.1, 4.0, 30.0, 60.0, 90.0, L, 1.00};
TurnParam sturn_R_90_1500 = {4200.0, 500.0, 0.1, 4.0, 30.0, 60.0, 90.0, R, 1.00};
// 大回り90
TurnParam lturn_L_90_500 = {5000.0, 500.0, 0.0, 0.0, 30.0, 60.0, 90.0, L, 1.00};
TurnParam lturn_R_90_500 = {5000.0, 500.0, 0.0, 0.0, 30.0, 60.0, 90.0, R, 1.00};
TurnParam lturn_L_90_700 = {2600.0, 700.0, 15.0, 29.0, 40.0, 50.0, 90.0, L, 1.00};
TurnParam lturn_R_90_700 = {2500.0, 700.0, 14.5, 30.0, 40.0, 50.0, 90.0, R, 1.00};
TurnParam lturn_L_90_800 = {5500.0, 800.0, 0.0, 0.0, 30.0, 60.0, 90.0, L, 1.00};
TurnParam lturn_R_90_800 = {5500.0, 800.0, 0.0, 0.0, 30.0, 60.0, 90.0, R, 1.00};
TurnParam lturn_L_90_1000 = {5300.0, 1000.0, 19.0, 31.0, 30.0, 60.0, 90.0, L, 1.00};
TurnParam lturn_R_90_1000 = {5300.0, 1000.0, 11.0, 38.0, 30.0, 60.0, 90.0, R, 1.00};
TurnParam lturn_L_90_1500 = {16000.0, 1500.0, 24.0, 96.0, 40.0, 47.0, 87.0, L, 1.00};
TurnParam lturn_R_90_1500 = {16000.0, 1500.0, 27.0, 97.0, 40.0, 49.0, 89.0, R, 1.00};
// 大回り180
TurnParam lturn_L_180_700 = {3600.0, 700.0, 20.0, 33.0, 31.0, 149.0, 180.0, L, 1.00};
TurnParam lturn_R_180_700 = {3600.0, 700.0, 20.0, 37.0, 28.0, 152.0, 180.0, R, 1.00};
TurnParam lturn_L_180_800 = {5500.0, 800.0, 0.0, 0.0, 25.0, 155.0, 180.0, L, 1.00};
TurnParam lturn_R_180_800 = {5500.0, 800.0, 0.0, 0.0, 25.0, 155.0, 180.0, R, 1.00};
TurnParam lturn_L_180_1000 = {5900.0, 1000.0, 20.0, 44.0, 38.0, 142.0, 180.0, L, 1.00};
TurnParam lturn_R_180_1000 = {5900.0, 1000.0, 20.0, 44.0, 38.0, 142.0, 180.0, R, 1.00};
TurnParam lturn_L_180_1500 = {11000.0, 1500.0, 11.0, 85.0, 44.0, 132.0, 176.0, L, 1.00};
TurnParam lturn_R_180_1500 = {11000.0, 1500.0, 11.0, 80.0, 48.0, 130.0, 178.0, R, 1.00};
// 行き斜め45
TurnParam gdturn_L_45_1000 = {14000.0, 1000.0, 10.0, 91.0, 22.0, 23.0, 45.0, L, 1.00};
TurnParam gdturn_R_45_1000 = {12000.0, 1000.0, 14.0, 81.0, 20.0, 25.0, 45.0, R, 1.00};
TurnParam gdturn_L_45_1500 = {24000.0, 1500.0, 4.0, 96.0, 22.0, 22.0, 44.0, L, 1.00};
TurnParam gdturn_R_45_1500 = {24000.0, 1500.0, 4.0, 98.0, 22.0, 23.0, 45.0, R, 1.00};
// 行き斜め135
TurnParam gdturn_L_135_1000 = {8200.0, 1000.0, 50.0, 77.0, 65.0, 70.0, 135.0, L, 1.00};
TurnParam gdturn_R_135_1000 = {8200.0, 1000.0, 48.0, 68.0, 65.0, 70.0, 135.0, R, 1.00};
TurnParam gdturn_L_135_1500 = {16000.0, 1500.0, 18.0, 80.0, 64.0, 66.0, 130.0, L, 1.00};
TurnParam gdturn_R_135_1500 = {15000.0, 1500.0, 20.0, 79.0, 65.0, 70.0, 135.0, R, 1.00};
// 帰り斜め45
TurnParam rdturn_L_45_1000 = {9600.0, 1000.0, 45.0, 37.0, 20.0, 25.0, 45.0, L, 1.00};
TurnParam rdturn_R_45_1000 = {9800.0, 1000.0, 45.0, 36.5, 20.0, 25.0, 45.0, R, 1.00};
TurnParam rdturn_L_45_1500 = {16000.0, 1500.0, 21.0, 37.0, 22.0, 23.0, 45.0, L, 1.00};
TurnParam rdturn_R_45_1500 = {12000.0, 1500.0, 33.0, 8.0, 22.0, 23.0, 45.0, R, 1.00};
// 帰り斜め135
TurnParam rdturn_L_135_1000 = {8800.0, 1000.0, 9.0, 55.0, 32.0, 103.0, 135.0, L, 1.00};
TurnParam rdturn_R_135_1000 = {8800.0, 1000.0, 10.0, 54.0, 30.0, 105.0, 135.0, R, 1.00};
TurnParam rdturn_L_135_1500 = {18000.0, 1500.0, 5.0, 122.0, 63.5, 64.5, 128.0, L, 1.00};
TurnParam rdturn_R_135_1500 = {17000.0, 1500.0, 2.5, 98.0, 64.0, 66.0, 130.0, R, 1.00};
// V90斜め
TurnParam vturn_L_90_1000 = {14000.0, 1000.0, 15.5, 53.0, 44.0, 46.0, 90.0, L, 1.00};
TurnParam vturn_R_90_1000 = {14000.0, 1000.0, 15.5, 53.0, 44.0, 46.0, 90.0, R, 1.00};
TurnParam vturn_L_90_1500 = {32000.0, 1500.0, 1.0, 105.0, 41.5, 41.5, 83.0, L, 1.00};
TurnParam vturn_R_90_1500 = {30000.0, 1500.0, 1.0, 86.0, 41.5, 42.5, 84.0, R, 1.00};

TurnType turn_700 = {&sturn_L_90_700,&sturn_R_90_700,&lturn_L_90_700,&lturn_R_90_700,&lturn_L_180_700,&lturn_R_180_700,
					&gdturn_L_45_1000,&gdturn_R_45_1000,&gdturn_L_135_1000,&gdturn_R_135_1000,
					&rdturn_L_45_1000,&rdturn_R_45_1000,&rdturn_L_135_1000,&rdturn_R_135_1000,
					&vturn_L_90_1000,&vturn_R_90_1000};
TurnType turn_800 = {&sturn_L_90_800,&sturn_R_90_800,&lturn_L_90_800,&lturn_R_90_800,&lturn_L_180_800,&lturn_R_180_800,
					&gdturn_L_45_1000,&gdturn_R_45_1000,&gdturn_L_135_1000,&gdturn_R_135_1000,
					&rdturn_L_45_1000,&rdturn_R_45_1000,&rdturn_L_135_1000,&rdturn_R_135_1000,
					&vturn_L_90_1000,&vturn_R_90_1000};
TurnType turn_1000 = {&sturn_L_90_700,&sturn_R_90_700,&lturn_L_90_1000,&lturn_R_90_1000,&lturn_L_180_1000,&lturn_R_180_1000,
					&gdturn_L_45_1000,&gdturn_R_45_1000,&gdturn_L_135_1000,&gdturn_R_135_1000,
					&rdturn_L_45_1000,&rdturn_R_45_1000,&rdturn_L_135_1000,&rdturn_R_135_1000,
					&vturn_L_90_1000,&vturn_R_90_1000};
TurnType turn_1500 = {&sturn_L_90_700,&sturn_R_90_700,&lturn_L_90_1500,&lturn_R_90_1500,&lturn_L_180_1500,&lturn_R_180_1500,
					&gdturn_L_45_1500,&gdturn_R_45_1500,&gdturn_L_135_1500,&gdturn_R_135_1500,
					&rdturn_L_45_1500,&rdturn_R_45_1500,&rdturn_L_135_1500,&rdturn_R_135_1500,
					&vturn_L_90_1500,&vturn_R_90_1500};

//-------------------------------------------------------------------
//	センサ閾値
//-------------------------------------------------------------------
const int SEN_LF_TH = 65;
const int SEN_RF_TH = 56;
const int SEN_LS_TH = 74;
const int SEN_RS_TH = 67;
const int SEN_LSS_TH = 250;
const int SEN_RSS_TH = 350;

const int  SEN_LSS_FIX_TH = 250;
const int  SEN_RSS_FIX_TH = 300;
const int  SEN_LSS_FIX_DEV = 150; // 300
const int  SEN_RSS_FIX_DEV = 150; // 130
const int  SEN_LS_FIX_TH = 25;
const int  SEN_RS_FIX_TH = 100;
const int  SEN_LS_FIX_DEV = 40;
const int  SEN_RS_FIX_DEV = 80;

const int SEN_LSS_DIG_TH = 1000;
const int SEN_RSS_DIG_TH = 800;

const int  SEN_LF_DEV = 150;
const int  SEN_RF_DEV = 200;
const int  SEN_LS_DEV = 100;
const int  SEN_RS_DEV = 100;
const int  SEN_LSS_DEV = 40;
const int  SEN_RSS_DEV = 80;

const int  SEN_LF_REF = 60;
const int  SEN_RF_REF = 40;
const int  SEN_LS_REF = 422;
const int  SEN_RS_REF = 100;
const int  SEN_LSS_REF = 634;//510;
const int  SEN_RSS_REF = 997;//463;

//-------------------------------------------------------------------
//	壁切れ補正
//-------------------------------------------------------------------
const float  FIX_DISTANCE_L = 63.0;		// 左小回りの壁切れ読み
const float  FIX_DISTANCE_R = 71.0;		// 右小回りの壁切れ読み
const float  FIX_DISTANCE_L2 = 2.0;		// 左大回り&左行き斜めの壁切れ読み
const float  FIX_DISTANCE_R2 = 7.0;		// 右大回り&右行き斜めの壁切れ読み
const float  FIX_DISTANCE_L3 = 160.0;	// 左斜め&左帰り斜めの壁切れ読み
const float  FIX_DISTANCE_R3 = 100.0;	// 右斜め&右帰り斜めの壁切れ読み

//-------------------------------------------------------------------
//	制御定数
//-------------------------------------------------------------------
// 速度関連
const float Kvp = 0.0001 * 0.6;
const float Kvi = 0.0001 / (0.150 * 0.5);
const float Kvd = 0.0001 * (0.150 * 0.125);
// 角速度関連
const float Kgp = 0.0005 * 0.6;
const float Kgi = 0.0005 / (0.150 * 0.5);
const float Kgd = 0.0005 * (0.030 * 0.125);
// 距離センサ関連
const float Kpp = 0.40;
const float Kpd = 0.05;

//-------------------------------------------------------------------
//	機体特性
//-------------------------------------------------------------------
const float TIRE_R = 25.025;
const float TIRE_L = 25.025;
const float TORED = 72.0;


